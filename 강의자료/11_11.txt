모든 데이터를 수치화 하고 그 데이터를 통해 결과값이 있다면 예측이가능하다.
-> ex) 주식, 채권, 환율을 통해 기온도 알 수 있다.

행무시! 열우선! - 외우기
-> 열은 column 컬럼별로 모델을 구성하게 된다.
-> 특성, 피처, 컬럼, 열 - 열의 동일한 의미이다 


input_shape=(3,))) 
-> 만약 (100,10,3)의 데이터가 있다면 input_shape=(10,3) 행무시!

verbose 중간에 실행과정을 생략할 수 있다. 
-> 0은 훈련과정생략(보여주는시간이 아깝기 때문에 사용)

예제 Keras14까지 Sequencial 모델의 기초이다

함수의 목적은 재사용이다
-> 함수형 모델을 사용하자!

함수형 모델 사용
-> 함수형 모델은 input layer가 별도로 있다
-> input layer 구성
-> 첫번째 dense층 구성, 상단에 input layer를 사용하겠다.
-> activation = 활성화 함수, layer마다 활성화 함수가 있다. 통상 relu를 사용하면 평균 85점이상 나온다 
-> 선형회귀 모델에서 activation default는 'linear'를 사용하고 있다 (activation='linear')
-> 마지막 activation은 linear이여야 하기 때문에 생략함
-> 모델을 정의함, 어디서부터 어디까지 모델구성인지
-> model.summary()를 사용했을 때 Sequencial layer와 차이는 input layer가 추가된 점이다

model.summary()
-> Output Shape의 차원은 현재 레이어에 있는 노드의 수
-> Param  (현재 노드의 수 + Bias) * input의 차원 or 이전의 차원
-> Total params 는 Param의 총 합
-> y=wx+b bias라는 놈을 생각을 안함, 단순 곱이라고 생각하면 3(input)* 5(현재layer 노드의 수), but b가 존재한다
-> 모든 layer마다 bias가 준비가 되어있다.
-> input이 3이지만 bias를 하나로 잡아주고 param을 계산하면 (3+1)*5 = 20이된다.

앙상블 모델
-> ex) 여러 악기가 모여 하나의 연주를 한다
-> 로또 acc 99프로인데 왜 당첨이 되지 못할까?
-> 도박사의 오류? 동전을 던졌을때 앞/뒤 - 9번 앞이나왔으니까 다음은 뒤가나온다? no 예측이 불가능하다 random이다
-> 각각의 데이터를 건드리지 않는다
-> 각각의 데이터는 따로 존재하고 연결해주는 것이 앙상블모델이다
-> Concatenate (사슬처럼 엮다)
-> 가중치가 높은 것? 낮은 것? 어느것이 좋다고 할 수 없다. 데이터의 형태에 따라 다르다

RNN에 대해서 한번 훑어보기