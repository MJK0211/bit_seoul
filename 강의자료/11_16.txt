파이썬 공부 틈틈히 하기

---------------------------------------------------------------------
첫번째 주 배웠던 개념 정리

DNN - Deep의 개념 
-> Node, Layer (신경망)
-> y = wx + b
-> w는 모든 layer에 존재한다
-> 최적의 weight를 구하기 위해 최소의 loss(0의 근사치로)
-> optimizer 'adam', 평균 85%

summary를 통해 parameter를 계산
-> 3x4 = 16, 4x3 = 15
-> bias의 존재 (1)

함수형 모델
-> 모델끼리 만들어서 연결을해서 묶어준다(앙상블)
-> concatenate (대문자, 소문자 문법 다름 주의!)

LSTM
-> 순차 데이터(ex - 시간순서가 있는 데이터)
-> TimeSeries(시계열)
-> 행, 열, 몇개씩 자르는지
-> input_shape(행무시! = 열, 자르는 갯수)

CNN
-> 차원 4차원
-> 이미지의 갯수 x 가로 x 세로 x 픽셀
-> 행무시! = 가로 x 세로 x 픽셀(3차원)

LSTM을 두개로 여러개로 묶을 경우
-> 데이터에 따라 다르다
-> 좋다 - 정답x,  안좋다 - 정답x
-> 돌려보고 확인해야 한다
-> return_sequence(차원을 넘겨줄때 사용)

early_stopping
-> monitor = 'loss'
-> patience = 100
-> mode = 'min'

history
-> hist = fit
-> 시각화
-> matplotlib
-> tensorboard

model save, load

데이터 전처리
-> scaler(minmax, standard, robust, maxabs)
-> 85% Data 전처리
-> standard_scaler - 가운데지점이 0

ex) 101, 102, 103, 104, 105, 107, 299 라는 데이터로 결과를 추출한다고 가정
-> 299는 이상한 데이터이다
-> 이상치라고 한다
-> 이상치 제거
-> 깔끔한 데이터셋을 구성할 수 있다
-> but 299라는 데이터가 존재하지만 이상치라고 제거했을 경우에는 데이터 조작이 되기 때문에 주의해야 한다

외우기!
      ㅣ      X      ㅣ    Y    ㅣ
---------------------------------
train ㅣfit/transformㅣ    X    ㅣ
test  ㅣ transform   ㅣ    X    ㅣ
val   ㅣ transform   ㅣ    X    ㅣ
pred  ㅣ transform   ㅣ    X    ㅣ

ai developer 지향, data scientist 지양

---------------------------------------------------------------------

CNN - Convolution(복합적인)

Conv2D

Maxpooling2D
-> 가장 특성치가 높은것만 남기는 것

Flatten
-> 현재까지 내려왔던 것을 일자로 펴주는 기능 - 이차원으로 변경
-> 4차원으로 구성된 layer를 다음 Dense층과 연결시키기 위해 사용

Mnist
-> 간단한 컴퓨터 비전 데이터셋, 이는 손으로 쓰여진 숫자 1~9까지의 이미지로 구성되어 있습니다.

One-Hot Encoding
-> 원-핫 인코딩은 단어 집합의 크기를 벡터의 차원으로 하고, 표현하고 싶은 단어의 인덱스에 1의 값을 부여하고,
   다른 인덱스에는 0을 부여하는 단어의 벡터 표현 방식
-> keras, sklearn 2가지가 있다
-> keras - from tensorflow.keras.utils import to_categorycal
-> sklearn - from sklearn.preprocessing import OneHotEncoder

다중분류
OneHotEncoding, model - activation='softmax', compile - loss='categorical_crossentropy'

CNN, LSTM activation default
-> CNN은 activation default = 'relu'이다 
-> LSTM activation default ='tanh'이다 - 탄젠트
